[General]
network = LoRaNetworkTest
num-rngs = 32
rng-class = "cMersenneTwister"
scheduler-class = "cSimulinkRTScheduler"
simulinkscheduler-start-port = 51001
simulinkscheduler-start-port-mat = 51101
simulinkscheduler-num-nodes = 64
simulinkscheduler-scaling = 0.5
simulinkscheduler-start-port-gw = 51501
simulinkscheduler-num-gateways = 1
cmdenv-redirect-output = true

# network features
**.numberOfGateways = 1
**.loRaGW[0].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${"avg"}

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[0].**.initialX = 10m#uniform(0m, 50m)
**.loRaGW[0].**.initialY = 10m

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 100m
**.constraintAreaMaxY = 100m
**.constraintAreaMaxZ = 0m

LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
**.minInterferenceTime = 0s
**.displayAddresses = false
**.alohaChannelModel = false

[Config CheckSending]
sim-time-limit = 30h
**.enableDQ = false
**.timeToFirstPacket = exponential(100s)
**.timeToNextPacket = exponential(100s)
**.timeToStartSignal = 0
**.retryLimit = 8

**.numberOfSubSystems = 20
**.numberOfNodes = 64
**.numberOfAeseNodes = 0
**.numberOfAeseActuatorNodes = 64

**.numberOfPacketsToSend = 0
#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 1
**.loRaNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.loRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.loRaNodes[*].**initialLoRaCF = (intuniform(0,2) * 0.2MHz + 868.1MHz)

**.loRaNodes[*].mobilityType = "LinearMobility"
**.loRaNodes[*].mobility.speed = 0mps #${speed=0..50 step 1}mps
**.loRaNodes[*].mobility.angle = 270deg

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# random deployment of nodes in a square square area
**.loRaNodes[*].**.initialX = uniform(0m, 10m)
**.loRaNodes[*].**.initialY = uniform(0m, 10m)

**.AeseloRaActuatorNodes[*].**.initFromDisplayString = false
**.AeseloRaActuatorNodes[*].**.evaluateADRinNode = false
**.AeseloRaActuatorNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaActuatorNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaActuatorNodes[*].**initialLoRaCR = 1
**.AeseloRaActuatorNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaActuatorNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaActuatorNodes[*].**initialLoRaCF = 869.5875MHz

#power consumption features
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaActuatorNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# random deployment of nodes in a square square area
**.AeseloRaActuatorNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaActuatorNodes[*].**.initialY = uniform(0m, 100m)

[Config DQ]
sim-time-limit = 30h
**.enableDQ = true
**.timeToFirstPacket = exponential(10s)
**.timeToNextPacket = exponential(1s)
**.timeToStartSignal = exponential(10s)

**.numberOfSubSystems = 20
**.numberOfNodes = 0
**.numberOfAeseNodes = 64
**.numberOfAeseActuatorNodes = 64

**.numberOfPacketsToSend = 0
**.noOfMslots = ${Mslots=5}
**.noOfNslots = 0#${Nslots=1,3}
**.mSlotDuration = ${mslotduration=0.1s}
**.nSlotDuration = ${nslotduration=0.15s}
**.numberOfChannels = 3
**.dataOnSameChannel = false

#nodes features
**.AeseloRaNodes[*].**.initFromDisplayString = false
**.AeseloRaNodes[*].**.evaluateADRinNode = false
**.AeseloRaNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaNodes[*].**initialLoRaCR = 1
**.AeseloRaNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaNodes[*].**initialLoRaCF = 869.4605MHz

**.AeseloRaNodes[*].mobilityType = "LinearMobility"
**.AeseloRaNodes[*].mobility.speed = 0mps #${speed=0..50 step 1}mps
**.AeseloRaNodes[*].mobility.angle = 270deg

#power consumption features
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
#**.AeseloRaNodes[*].**.FileForTimes = "/home/laksh/Downloads/omnetpp-5.2.1/samples/flora/simulations/results/timesFor50Nodes.csv"
# random deployment of nodes in a square square area
**.AeseloRaNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaNodes[*].**.initialY = uniform(0m, 100m)

**.AeseloRaActuatorNodes[*].**.initFromDisplayString = false
**.AeseloRaActuatorNodes[*].**.evaluateADRinNode = false
**.AeseloRaActuatorNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaActuatorNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaActuatorNodes[*].**initialLoRaCR = 1
**.AeseloRaActuatorNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaActuatorNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaActuatorNodes[*].**initialLoRaCF = 869.5875MHz

#power consumption features
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaActuatorNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# random deployment of nodes in a square square area
**.AeseloRaActuatorNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaActuatorNodes[*].**.initialY = uniform(0m, 100m)

**.powerConsumption:vector.vector-recording = false
**.radioMode:vector.vector-recording = false
**.powerConsumption:vector.vector-recording = false
**.receptionState:vector.vector-recording = false
**.residualEnergyCapacity:vector.vector-recording = false
**.transmissionState:vector.vector-recording = false

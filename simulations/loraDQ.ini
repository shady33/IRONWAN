[General]
network = LoRaNetworkTest
num-rngs = 16
rng-class = "cMersenneTwister"

# network features
**.numberOfGateways = 1
**.loRaGW[0].numUdpApps = 1
**.loRaGW[0].packetForwarder.localPort = 2000
**.loRaGW[0].packetForwarder.destPort = 1000
**.loRaGW[0].packetForwarder.destAddresses = "networkServer"
**.loRaGW[0].packetForwarder.indexNumber = 0

**.networkServer.numUdpApps = 1
**.networkServer.**.evaluateADRinServer = false
**.networkServer.udpApp[0].typename = "NetworkServerApp"
**.networkServer.udpApp[0].destAddresses = "loRaGW[0]"
**.networkServer.udpApp[0].destPort = 2000
**.networkServer.udpApp[0].localPort = 1000
**.networkServer.udpApp[0].adrMethod = ${"avg"}

#gateway features
**.LoRaGWNic.radio.iAmGateway = true
**.loRaGW[*].**.initFromDisplayString = false
**.loRaGW[0].**.initialX = 10m#uniform(0m, 50m)
**.loRaGW[0].**.initialY = 10m

#general features
**.sigma = 0
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 480m
**.constraintAreaMaxY = 480m
**.constraintAreaMaxZ = 0m

# 800*800 max 1200*1200, GW 400 400

LoRaNetworkTest.**.radio.separateTransmissionParts = false
LoRaNetworkTest.**.radio.separateReceptionParts = false

**.delayer.config = xmldoc("cloudDelays.xml")
**.radio.radioMediumModule = "LoRaMedium"
**.LoRaMedium.pathLossType = "LoRaPathLossOulu"
**.minInterferenceTime = 0s
**.displayAddresses = false
**.alohaChannelModel = false

# cache features
**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 546m
**.LoRaMedium.neighborCache.refillPeriod = 3000s
**.LoRaMedium.radioModeFilter = true

[Config CheckSending]
sim-time-limit = 1h
**.enableDQ = false
**.timeToFirstPacket = exponential(180s)
**.timeToNextPacket = exponential(${load=10}s)
**.timeToStartSignal = 0
**.numberOfSubSystems = 3
**.numberOfNodes = ${nodes=50}
**.numberOfAeseNodes = 0
**.numberOfAeseActuatorNodes = 250
**.numberOfPacketsToSend = 0
**.sendImmediateActuation = false
**.retryLimit = 1 # LAKSH:CHange to 8 for confirmed/retransmit messages

#nodes features
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**.evaluateADRinNode = false
**.loRaNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 1
**.loRaNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.loRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.loRaNodes[*].**initialLoRaCF = (intuniform(0,2) * 0.2MHz + 868.1MHz)

**.loRaNodes[*].mobilityType = "LinearMobility"
**.loRaNodes[*].mobility.speed = 0mps #${speed=0..50 step 1}mps
**.loRaNodes[*].mobility.angle = 270deg

#power consumption features
**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

# random deployment of nodes in a square square area
**.loRaNodes[*].**.initialX = uniform(0m, 100m)
**.loRaNodes[*].**.initialY = uniform(0m, 100m)

**.AeseloRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"

**.AeseloRaActuatorNodes[*].**.initFromDisplayString = false
**.AeseloRaActuatorNodes[*].**.evaluateADRinNode = false
**.AeseloRaActuatorNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaActuatorNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaActuatorNodes[*].**initialLoRaCR = 1
**.AeseloRaActuatorNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaActuatorNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaActuatorNodes[*].**initialLoRaCF = 869.5875MHz

#power consumption features
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaActuatorNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# random deployment of nodes in a square square area
**.AeseloRaActuatorNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaActuatorNodes[*].**.initialY = uniform(0m, 100m)

**.powerConsumption:vector.vector-recording = false
**.radioMode:vector.vector-recording = false
**.powerConsumption:vector.vector-recording = false
**.receptionState:vector.vector-recording = false
**.residualEnergyCapacity:vector.vector-recording = false
**.transmissionState:vector.vector-recording = false

[Config DQ]
sim-time-limit = 1d
**.enableDQ = true
**.timeToFirstPacket = exponential(180s)
**.timeToNextPacket = exponential(1s)
**.timeToStartSignal = exponential(10s)
**.numberOfSubSystems = 3
**.numberOfNodes = 0
**.numberOfAeseNodes = ${nodes=10}
**.numberOfPacketsToSend = 0
**.noOfMslots = 3#${Mslots=1..30 step 1}
**.noOfNslots = 1#${Nslots=1,3}
**.mSlotDuration = 0.1s
**.nSlotDuration = 0.15s
**.dataOnSameChannel = true
**.multiplePackets = false

#nodes features
**.AeseloRaNodes[*].**.initFromDisplayString = false
**.AeseloRaNodes[*].**.evaluateADRinNode = false
**.AeseloRaNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaNodes[*].**initialLoRaCR = 4
**.AeseloRaNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaNodes[*].**initialLoRaCF = 868MHz

**.AeseloRaNodes[*].mobilityType = "LinearMobility"
**.AeseloRaNodes[*].mobility.speed = 0mps #${speed=0..50 step 1}mps
**.AeseloRaNodes[*].mobility.angle = 270deg

#power consumption features
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
#**.AeseloRaNodes[*].**.FileForTimes = "/home/laksh/Downloads/omnetpp-5.2.1/samples/flora/simulations/results/timesFor50Nodes.csv"
# random deployment of nodes in a square square area
**.AeseloRaNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaNodes[*].**.initialY = uniform(0m, 100m)

**.AeseloRaActuatorNodes[*].**.initFromDisplayString = false
**.AeseloRaActuatorNodes[*].**.evaluateADRinNode = false
**.AeseloRaActuatorNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaActuatorNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaActuatorNodes[*].**initialLoRaCR = 4
**.AeseloRaActuatorNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaActuatorNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time

#power consumption features
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaActuatorNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# random deployment of nodes in a square square area
**.AeseloRaActuatorNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaActuatorNodes[*].**.initialY = uniform(0m, 100m)

**.powerConsumption:vector.vector-recording = false
**.radioMode:vector.vector-recording = false
**.powerConsumption:vector.vector-recording = false
**.receptionState:vector.vector-recording = false
**.residualEnergyCapacity:vector.vector-recording = false
**.transmissionState:vector.vector-recording = false

[Config DQMC]
sim-time-limit = 1h
**.enableDQ = true
**.timeToFirstPacket = exponential(180s)
**.timeToNextPacket = ${load=exponential(1s)}
**.timeToStartSignal = exponential(10s)
**.numberOfNodes = 0
**.numberOfSubSystems = 3
**.numberOfAeseNodes = ${nodes=150}
**.numberOfAeseActuatorNodes = 150
**.numberOfPacketsToSend = 0
**.multiplePackets = false

**.noOfMslots = ${Mslots=5}
**.noOfNslots = 0#${Nslots=1,3}
**.mSlotDuration = ${mslotduration=0.1s}
**.nSlotDuration = ${nslotduration=0.15s}
**.numberOfChannels = 3
**.dataOnSameChannel = false

#nodes features
**.AeseloRaNodes[*].**.initFromDisplayString = false
**.AeseloRaNodes[*].**.evaluateADRinNode = false
**.AeseloRaNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaNodes[*].**initialLoRaCF = 869.4605MHz
**.AeseloRaNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaNodes[*].**initialLoRaCR = 1
**.AeseloRaNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time

**.AeseloRaNodes[*].mobilityType = "LinearMobility"
**.AeseloRaNodes[*].mobility.speed = 0mps #${speed=0..50 step 1}mps
**.AeseloRaNodes[*].mobility.angle = 270deg

#power consumption features
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
#**.AeseloRaNodes[*].**.FileForTimes = "/home/laksh/Downloads/omnetpp-5.2.1/samples/flora/simulations/results/timesFor50Nodes.csv"
# random deployment of nodes in a square square area
**.AeseloRaNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaNodes[*].**.initialY = uniform(0m, 100m)

**.AeseloRaActuatorNodes[*].**.initFromDisplayString = false
**.AeseloRaActuatorNodes[*].**.evaluateADRinNode = false
**.AeseloRaActuatorNodes[*].**initialLoRaSF = 7#intuniform(7,12)#${SF=7..12 step 1}#intuniform(7,12)
**.AeseloRaActuatorNodes[*].**initialLoRaBW = 125 kHz
**.AeseloRaActuatorNodes[*].**initialLoRaCR = 1
**.AeseloRaActuatorNodes[*].**initialLoRaTP = 14dBm #(2dBm + 3dBm*intuniform(0, 4))
**.AeseloRaActuatorNodes[*].**initialLoRaDC = 1 #DutyCycle, value as a percentage. Eg. 1 means we're transmitting no more than 1% of the time
**.AeseloRaActuatorNodes[*].**initialLoRaCF = 869.5875MHz

#power consumption features
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
**.AeseloRaActuatorNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
**.AeseloRaActuatorNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")
# random deployment of nodes in a square square area
**.AeseloRaActuatorNodes[*].**.initialX = uniform(0m, 100m)
**.AeseloRaActuatorNodes[*].**.initialY = uniform(0m, 100m)

**.powerConsumption:vector.vector-recording = false
**.radioMode:vector.vector-recording = false
**.powerConsumption:vector.vector-recording = false
**.receptionState:vector.vector-recording = false
**.residualEnergyCapacity:vector.vector-recording = false
**.transmissionState:vector.vector-recording = false
